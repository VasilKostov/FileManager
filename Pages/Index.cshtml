@page
@model FileManager.Pages.IndexModel
@* 
@* <h3>Upload a File</h3>
<form id="uploadForm" enctype="multipart/form-data">
    <input type="file" name="file" id="fileInput" />
    <button type="submit">Upload</button>
</form>

<!-- Area to display the response message -->
<div id="responseMessage"></div>

<!-- Area to display the uploaded files -->
<h3>Uploaded Files</h3>
<ul id="uploadedFilesList"></ul>

<script>
    document.getElementById('uploadForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission

        const formData = new FormData();
        const fileInput = document.getElementById('fileInput');
        const responseMessage = document.getElementById('responseMessage');
        if (fileInput.files.length > 0) {
            formData.append('file', fileInput.files[0]);

            fetch('https://localhost:7105/api/file/upload', {
                method: 'POST',
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                responseMessage.innerHTML = 'Success: File uploaded successfully!';
                fetchUploadedFiles();
            })
            .catch(error => {
                responseMessage.innerHTML = 'Error: Failed to upload file.';
                console.error('Error:', error);
            });
        } else {
            alert('Please select a file to upload.');
        }
    });

    // Function to fetch and display the uploaded files
    function fetchUploadedFiles() {
        fetch('https://localhost:7105/api/file/get-files')
            .then(response => response.json())
            .then(files => {
                const fileList = document.getElementById('uploadedFilesList');
                fileList.innerHTML = '';
                files.forEach(file => {
                    const li = document.createElement('li');
                    li.textContent = `${file.name} (${file.extension}) with size: ${file.size}`;
                    fileList.appendChild(li);
                });
            })
            .catch(error => {
                console.error('Error fetching files:', error);
            });
    }

    // Call this function when the page loads to display the initial files
    fetchUploadedFiles();
</script> *@

<h3>Upload a File</h3>
<form id="uploadForm" enctype="multipart/form-data">
    <input type="file" name="file" id="fileInput" />
    <button type="submit">Upload</button>
</form>

<!-- Area to display the response message -->
<div id="responseMessage"></div>

<!-- Area to display the uploaded files -->
<h3>Uploaded Files</h3>
<ul id="uploadedFilesList"></ul>

<script>
    document.getElementById('uploadForm').addEventListener('submit', function (e) {
        e.preventDefault(); // Prevent the default form submission

        const formData = new FormData();
        const fileInput = document.getElementById('fileInput');
        const responseMessage = document.getElementById('responseMessage');

        if (fileInput.files.length > 0) {
            formData.append('file', fileInput.files[0]);

            fetch('https://localhost:7105/api/file/upload', {
                method: 'POST',
                body: formData,
            })
            .then(response => response.json())
            .then(data => {
                // Display the detailed response
                responseMessage.innerHTML = `
                    <strong>Upload Summary:</strong><br>
                    <strong>Total Files Uploaded:</strong> ${data.totalFilesUploaded}<br>
                    <strong>Total Size Uploaded:</strong> ${data.totalSizeUploaded}<br>
                `;

                if (data.notUploadedFiles.length > 0) {
                    responseMessage.innerHTML += `
                        <strong>Failed to Upload:</strong> ${data.notUploadedFiles.join(', ')}
                    `;
                }

                // Fetch the updated files list after upload
                fetchUploadedFiles();
            })
            .catch(error => {
                responseMessage.innerHTML = 'Error: Failed to upload file.';
                console.error('Error:', error);
            });
        } else {
            alert('Please select a file to upload.');
        }
    });

    // Function to fetch and display the uploaded files
     function fetchUploadedFiles() {
         fetch('https://localhost:7105/api/file/get-files')
             .then(response => response.json())
             .then(files => {
                 const fileList = document.getElementById('uploadedFilesList');
                 fileList.innerHTML = '';
                 files.forEach(file => {
                     const li = document.createElement('li');
                     li.textContent = `${file.name} (${file.extension}) with size: ${file.size}`;
                     fileList.appendChild(li);
                 });
             })
             .catch(error => {
                 console.error('Error fetching files:', error);
             });
     }

     // Call this function when the page loads to display the initial files
     fetchUploadedFiles();
</script>
